apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "current.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "current.name" . }}
    helm.sh/chart: {{ include "current.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "current.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "current.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- if not (eq .Values.imagePullSecret "") }}
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecret }}"
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
{{- if .Values.image }}
          image: "{{ .Values.image }}"
{{- else }}
          image: "{{ .Values.imageInfo.registry }}/{{ .Values.imageInfo.repository }}:{{ .Values.imageInfo.tag }}"
{{- end }}
          imagePullPolicy: {{ .Values.imageInfo.pullPolicy }}
          env:
          - name: MODE
            value: "http-server"
          - name: HOST_HTTP_SERVER_PORT
            value: "{{ .Values.service.port }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
